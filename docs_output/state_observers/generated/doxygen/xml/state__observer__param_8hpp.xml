<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="state__observer__param_8hpp" kind="file" language="C++">
    <compoundname>state_observer_param.hpp</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includes local="yes">rclcpp/rclcpp.hpp</includes>
    <includes local="yes">rclcpp_lifecycle/lifecycle_node.hpp</includes>
    <includedby refid="kalman__filter_8hpp" local="no">include/state_observers/kalman_filter.hpp</includedby>
    <includedby refid="luenberger_8hpp" local="no">include/state_observers/luenberger.hpp</includedby>
    <includedby refid="state__observer_8hpp" local="no">include/state_observers/state_observer.hpp</includedby>
    <includedby refid="kalman__filter__param_8hpp" local="yes">include/state_observers_param/kalman_filter_param.hpp</includedby>
    <includedby refid="luenberger__param_8hpp" local="yes">include/state_observers_param/luenberger_param.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>string</label>
      </node>
      <node id="1">
        <label>include/state_observers_param/state_observer_param.hpp</label>
        <link refid="state__observer__param_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="2">
        <label>Eigen/Dense</label>
      </node>
      <node id="6">
        <label>rclcpp_lifecycle/lifecycle_node.hpp</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>include/state_observers_param/luenberger_param.hpp</label>
        <link refid="luenberger__param_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/state_observers_param/state_observer_param.hpp</label>
        <link refid="state__observer__param_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/state_observers/state_observer.hpp</label>
        <link refid="state__observer_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/state_observers/luenberger.hpp</label>
        <link refid="luenberger_8hpp_source"/>
      </node>
      <node id="2">
        <label>include/state_observers/kalman_filter.hpp</label>
        <link refid="kalman__filter_8hpp_source"/>
      </node>
      <node id="5">
        <label>include/state_observers_param/kalman_filter_param.hpp</label>
        <link refid="kalman__filter__param_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classstate__observer_1_1StateObserverParam" prot="public">state_observer::StateObserverParam</innerclass>
    <innernamespace refid="namespacestate__observer">state_observer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2024<sp/>National<sp/>Council<sp/>of<sp/>Research<sp/>of<sp/>Italy<sp/>(CNR)<sp/>-<sp/>Intelligent<sp/>Robotics<sp/>Lab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STATE_OBSERVERS_PARAM__STATE_OBSERVER_PARAM_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_OBSERVERS_PARAM__STATE_OBSERVER_PARAM_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rclcpp/rclcpp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rclcpp_lifecycle/lifecycle_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">state_observer</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classstate__observer_1_1StateObserverParam" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classstate__observer_1_1StateObserverParam" kindref="compound">StateObserverParam</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classstate__observer_1_1StateObserverParam_1a25109f549d5cd7b51aa4e81dca5c0a11" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classstate__observer_1_1StateObserverParam_1a25109f549d5cd7b51aa4e81dca5c0a11" kindref="member">StateObserverParam</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classstate__observer_1_1StateObserverParam_1a2621b7eedb1f51878790b442620103b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classstate__observer_1_1StateObserverParam_1a2621b7eedb1f51878790b442620103b0" kindref="member">~StateObserverParam</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classstate__observer_1_1StateObserverParam_1a878fdd58575488e88f2661024e971649" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classstate__observer_1_1StateObserverParam_1a878fdd58575488e88f2661024e971649" kindref="member">initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp_lifecycle::LifecycleNode::SharedPtr<sp/>&amp;<sp/>node);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classstate__observer_1_1StateObserverParam_1a00ae379c2dfe6dbdf10d18a0528d3623" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a00ae379c2dfe6dbdf10d18a0528d3623" kindref="member">get_state_transition_matrix</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A_;}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classstate__observer_1_1StateObserverParam_1a9954e81143a988fd25886cbfa3605616" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a9954e81143a988fd25886cbfa3605616" kindref="member">get_input_matrix</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_;}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classstate__observer_1_1StateObserverParam_1ae6a757e174a59ef72874e28ecedb1259" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1ae6a757e174a59ef72874e28ecedb1259" kindref="member">get_output_matrix</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C_;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classstate__observer_1_1StateObserverParam_1a6252757736637f0f3453228bea743f84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a6252757736637f0f3453228bea743f84" kindref="member">get_feedforward_matrix</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>D_;}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classstate__observer_1_1StateObserverParam_1a9fe90d5e66b8e5777d449fb5069af79c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a9fe90d5e66b8e5777d449fb5069af79c" kindref="member">get_initial_state</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initial_state_;}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classstate__observer_1_1StateObserverParam_1a7e2d98ef1a6ff08144c82834adc7a095" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a7e2d98ef1a6ff08144c82834adc7a095" kindref="member">get_A</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A_;}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classstate__observer_1_1StateObserverParam_1a63182d73f65f30e53a4d16f8000d2f65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a63182d73f65f30e53a4d16f8000d2f65" kindref="member">get_B</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_;}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classstate__observer_1_1StateObserverParam_1a64b622ec589ebcd67d7f19785bc8451b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a64b622ec589ebcd67d7f19785bc8451b" kindref="member">get_C</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C_;}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classstate__observer_1_1StateObserverParam_1a8446729889c05c151c6194eb2b3e3fd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Eigen::MatrixXd<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a8446729889c05c151c6194eb2b3e3fd3" kindref="member">get_D</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>D_;}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classstate__observer_1_1StateObserverParam_1a4523494c23ad65f18ff3c4e7acd0f000" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classstate__observer_1_1StateObserverParam_1a4523494c23ad65f18ff3c4e7acd0f000" kindref="member">get_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Not<sp/>implemented.&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(@samu)<sp/>pure<sp/>virtual<sp/>and<sp/>dummy<sp/>in<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>SharedPtr<sp/>=<sp/>std::shared_ptr&lt;StateObserverParam&gt;;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>rclcpp_lifecycle::LifecycleNode::SharedPtr<sp/>node_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>Eigen::MatrixXd<sp/>A_,<sp/>B_,<sp/>C_,<sp/>D_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>initial_state_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fully_declare_parameter(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>param_name,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::ParameterType<sp/>type,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>description);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>state_observer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>STATE_OBSERVERS_PARAM__STATE_OBSERVER_PARAM_HPP_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/state_observers_param/state_observer_param.hpp"/>
  </compounddef>
</doxygen>
